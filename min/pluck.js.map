{"version":3,"sources":["pluck.js"],"names":["Array","prototype","pluck","prop_name","executable","_len","arguments","length","args","_key","hasWarn","console","warn","result","this","forEach","item","push","apply","undefined"],"mappings":"AAAA,YAOAA,OAAMC,UAAUC,MAAQ,SAAUC,EAAWC,GACzC,IAAK,GAAIC,GAAOC,UAAUC,OAD8BC,EAAIR,MAAAK,EAAA,EAAAA,EAAA,EAAA,GAAAI,EAAA,EAAAJ,EAAAI,EAAAA,IAAJD,EAAIC,EAAA,GAAAH,UAAAG,EAC5D,IAAIC,GAAUC,SAAWA,QAAQC,KAC7BC,IAgBJ,OAfIT,IACAI,EAAOA,MACPM,KAAKC,QAAQ,SAAAC,GACsB,kBAApBA,GAAKb,GACZU,EAAOI,KAAKD,EAAKb,GAAWe,MAAMF,EAAMR,KAGxCE,GAAWC,QAAQC,KAAI,qBAAsBT,EAAS,6BAA8Ba,GACpFH,EAAOI,KAAKE,YAKpBL,KAAKC,QAAQ,SAAAC,GAGT,MAHiBH,GAAOI,KAAKD,EAAKb,MAEnCU","file":"pluck.js","sourcesContent":["'use strict';\n/**\n * @param {String} prop_name Property name\n * @param {Boolean} executable Run method\n * @param {*} args Arguments array of the executed function\n * @return {Array}\n */\nArray.prototype.pluck = function (prop_name, executable, ...args) {\n    let hasWarn = console && console.warn;\n    let result = [];\n    if (executable) {\n        args = args || [];\n        this.forEach(item => {\n            if (typeof item[prop_name] === 'function') {\n                result.push(item[prop_name].apply(item, args));\n            }\n            else {\n                hasWarn && console.warn(`[prototype-pluck] ${prop_name} is not a method of object`, item);\n                result.push(undefined);\n            }\n        });\n    }\n    else {\n        this.forEach(item => result.push(item[prop_name]));\n    }\n    return result;\n};\n"],"sourceRoot":"/source/"}